name: Sync to Public Repo on PR Merge

on:
  pull_request:
    types: [closed]
    branches: [main]

jobs:
  sync:
    # Only run if the PR was actually merged (not just closed)
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main
          token: ${{ secrets.SYNC_TOKEN }}

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Push to public repository
        run: |
          # Safety checks
          CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
          if [ "$CURRENT_BRANCH" != "main" ]; then
            echo "‚ùå ERROR: Not on main branch (currently on: $CURRENT_BRANCH)"
            echo "This workflow should only run on main branch"
            exit 1
          fi

          # Verify the PR was merged to main
          if [ "${{ github.event.pull_request.base.ref }}" != "main" ]; then
            echo "‚ùå ERROR: PR was not targeting main branch"
            echo "PR was targeting: ${{ github.event.pull_request.base.ref }}"
            exit 1
          fi

          # Add public repo as remote with authentication
          git remote add public https://x-access-token:${{ secrets.SYNC_TOKEN }}@github.com/anthropics/claude-cookbooks.git
          git fetch public

          # Try to push main branch explicitly (fast-forward only)
          if git push public main:main; then
            echo "‚úÖ Successfully pushed main to public repository"
          else
            echo "‚ùå Failed to push to public repository"
            echo "This likely means the public repo has diverged from private."
            echo "Manual intervention required to resolve."
            exit 1
          fi

      - name: Create issue on failure
        if: failure()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'üö® Sync to Public Failed - Manual Resolution Needed',
              body: `## Sync Failure Details

              **Workflow Run:** ${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}
              **PR:** #${context.payload.pull_request.number} - ${context.payload.pull_request.title}
              **Merged by:** @${context.payload.pull_request.merged_by.login}

              The automatic sync from private to public repository failed. This typically happens when:

              1. The public repository has commits that aren't in the private repository
              2. There was a network or API issue

              ## Resolution Steps

              \`\`\`bash
              # Manually sync the repositories
              git fetch origin  # private repo
              git fetch public  # public repo
              git checkout main

              # Check the divergence
              git log origin/main..public/main  # commits in public but not private
              git log public/main..origin/main  # commits in private but not public

              # If you want to force private ‚Üí public (use with caution):
              git push public main --force-with-lease

              # Or merge and resolve conflicts:
              git merge public/main
              # Resolve conflicts if any
              git push origin main
              git push public main
              \`\`\`

              After resolving, close this issue.`,
              labels: ['sync-failure', 'urgent']
            })
